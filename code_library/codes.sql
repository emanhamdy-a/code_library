-- phpMyAdmin SQL Dump
-- version 4.8.0.1
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Aug 17, 2020 at 06:14 AM
-- Server version: 10.1.32-MariaDB
-- PHP Version: 7.2.5

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `code_library`
--

-- --------------------------------------------------------

--
-- Table structure for table `codes`
--

CREATE TABLE `codes` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `code` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `explaine` longtext COLLATE utf8mb4_unicode_ci,
  `file` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `bigfile` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `codes`
--

INSERT INTO `codes` (`id`, `name`, `code`, `explaine`, `file`, `bigfile`, `created_at`, `updated_at`) VALUES
(1, 'use controller it in all controllers without include', '\'Up\'   => App\\Http\\Controllers\\Upload::class ,\r\n\r\n//includes this line in \'aliases\' array in configapp.php file\r\nand use code like Up()->yourfunction();\r\n\r\nor include it like \r\n\r\nuse App\\Http\\Controllers\\Upload;\r\nUpload::yourStaticFunction();', 'if you do that\r\n\r\nor include it like use App\\Http\\Controllers\\Upload;\r\nUpload::yourStaticFunction();\r\n\r\ndont need to \r\n\r\n\'Up\'   => App\\Http\\Controllers\\Upload::class ,\r\n//includes this line in \'aliases\' array in configapp.php file', NULL, NULL, '2020-07-25 20:10:00', '2020-07-26 00:02:19'),
(2, 'join where function', '$codes = DB::table(\'codes\')\r\n        ->join(\'code_tag\', \'code_tag.code_id\', \'=\', \'codes.id\')\r\n        ->where(function($query)use ($parents)      {\r\n          $query->whereIn(\'code_tag.tag_id\',$parents);\r\n        })->Where(function($query)use ($sr){\r\n          $query->where(\'codes.code\',\'LIKE\',$sr);\r\n          $query->orwhere(\'codes.name\',\'LIKE\',$sr);\r\n          $query->orwhere(\'codes.explaine\',\'LIKE\',$sr);\r\n        })->select(\'codes.*\')\r\n        ->paginate(10);', 'join between two tabels with function \r\ncodes firest table\r\ncode_tag second table it pivot table between code and tag table\r\nthis code get all codes have specific tag_id', NULL, NULL, '2020-07-25 20:45:51', '2020-07-27 12:27:19'),
(3, 'create file for helper functions', '\"autoload\": {\r\n        \"classmap\": [\r\n            \"database/seeds\",\r\n            \"database/factories\"\r\n        ],\"files\":[\"App/Http/helper.php\"],//add this line to autoload function\r\n        \"psr-4\": {\r\n            \"App\\\\\": \"app/\"\r\n        }\r\n    },\r\n\r\ncomposer dump-autoload', 'create helper.php file in App/Http\r\nor any path you add to auto load function\r\n\r\nto fire it add this line to command\r\n composer dump-autoload', NULL, NULL, '2020-07-25 22:00:26', '2020-07-25 22:00:26'),
(4, 'run Laravel without Artisan Serve Command?', '1. Create local directory in your project directory.\r\n2. Move all files and folders except public directory in the local directory.\r\n3. Move all files and folders from public directory to project directory and remove public directory.\r\n4. Open index.php file and replace\r\nrequire __DIR__.\'/../bootstrap/autoload.php\'; with require __DIR__.\'/local/bootstrap/autoload.php\';\r\nAND\r\n$app = require_once __DIR__.\'/../bootstrap/app.php\'; with $app = require_once __DIR__.\'/local/bootstrap/app.php\';\r\n5. Now you can run your project without artisan serve command \"http://localhost/project\"', NULL, NULL, NULL, '2020-07-25 23:17:54', '2020-07-25 23:34:16'),
(5, 'run multiple Laravel projects at same time', 'php artisan serve --port=8001', NULL, NULL, NULL, '2020-07-25 23:32:26', '2020-07-25 23:34:46'),
(6, 'jstree files', '<link rel=\"stylesheet\" href=\"{{ url(\'/\') }}/jstree/default/style.css\">\r\n\r\n<script src=\"{{ url(\'/jstree/js/jstree.js\') }}\"></script>\r\n<script src=\"{{ url(\'/stree/js/jstree.checkbox.js\') }}\"></script>\r\n<script src=\"{{ url(\'/jstree/js/jstree.wholerow.js\') }}\"></script>\r\n<script src=\"{{ url(\'/jstree/js/jstree.types.js\') }}\"></script>\r\n\r\n@stack(\'js\')\r\n@stack(\'css\')', NULL, 'files/366908731jstree.rar', 'bigfiles/953796811vakata-jstree-0097fab.rar', '2020-07-26 08:25:33', '2020-07-26 08:25:33'),
(7, 'jstree example', '@extends(\'layouts.app\')\r\n\r\n@section(\'content\')\r\n@include(\'users.partials.header\', [\r\n        \'class\' => \'col-lg-7\'\r\n    ])\r\n@push(\'js\')\r\n<!-- Trigger the modal with a button -->\r\n<style type=\"text/css\">\r\n .hidden{display:none;}\r\n</style>\r\n<?php\r\n\r\n// public function edit($id)\r\n  // {\r\n  //    $code = Code::find($id);\r\n  //    $tags = DB::table(\'tags\')\r\n  //    ->join(\'code_tag\', \'code_tag.tag_id\', \'=\', \'tags.id\')\r\n  //    ->where(function($query)use ($id)      {\r\n  //      $query->where(\'code_tag.code_id\',$id);\r\n  //    })->select(\'tags.id\')\r\n  //    ->get();\r\n  //    $title   = trans(\'Edit\');\r\n  //    return view(\'codes.edit\', compact(\'code\', \'title\',\'tags\'));\r\n// }\r\n\r\n//if($r->parent){\r\n  // $parents=explode(\', \',$r->parent);\r\n  // foreach ($parents as $parent) {\r\n  //   if($parent!=\'\'){\r\n  //     DB::table(\'code_tag\')->insert([\r\n  //       [\'code_id\' => $id, \'tag_id\' => $parent]\r\n  //     ]);\r\n  //   }\r\n  // }\r\n//}\r\n\r\n$tgs=[];\r\n  $tg=\'\';\r\n foreach($tags as $tag){\r\n   $tgs[]=$tag->id;\r\n  }\r\n?>\r\n<script type=\"text/javascript\">\r\n$(document).ready(function(){\r\n  $(\'.mn_tg\').on(\'click\',function () {\r\n    $(\'.parent_id\').val(\'\');\r\n    $(\"#jstree\").jstree().deselect_all(true);\r\n  })\r\n\r\n  $(\'#jstree\').jstree({\r\n    \"core\" : {\r\n      \'data\' :{!! get_dep($tgs) !!},\r\n      \"themes\" : {\r\n        \"variant\" : \"large\"\r\n      }\r\n    },\r\n    \'checkbox\' : {\r\n    		\'three_state\' : false,\r\n        \'visible\' : true,\r\n        \"keep_selected_style\" : false\r\n    },\r\n    \"plugins\" : [ \"wholerow\",\"checkbox\"]\r\n  });\r\n\r\n});\r\n\r\n$(\'#jstree\').on(\'changed.jstree\',function(e,data){\r\n    var i , j , r = [];\r\n    var  name = [];\r\n    for(i=0,j = data.selected.length;i < j;i++)\r\n    {\r\n        r.push(data.instance.get_node(data.selected[i]).id);\r\n        name.push(data.instance.get_node(data.selected[i]).text);\r\n    }\r\n    $(\'.parent_id\').val(r.join(\', \'));\r\n    if(r.join(\', \') != \'\')\r\n    {\r\n      $(\'#form_Delete_department\').attr(\'action\',\'{{ url(\'tags\') }}/\'+r.join(\', \'));\r\n      $(\'#dep_name\').text(name.join(\', \'));\r\n      $(\'.showbtn_control\').removeClass(\'hidden\');\r\n      $(\'.edit_dep\').attr(\'href\',\'{{ url(\'tags\') }}/\'+r.join(\', \')+\'/edit\');\r\n    }else{\r\n      $(\'.showbtn_control\').addClass(\'hidden\');\r\n    }\r\n});\r\n</script>\r\n@endpush\r\n  <div class=\"container-fluid mt--7\">\r\n    <div class=\"row\">\r\n      <div class=\"col-xl-5 order-xl-2 mb-5 mb-xl-0\">\r\n          <div class=\"card card-profile shadow\">\r\n              <div class=\"card-body pt-0 pt-md-4\">\r\n                  <div class=\"row\">\r\n                    <button type=\"button\" class=\"btn btn-primary mn_tg showbtn_control mb-5 mt-4\" style=\'margin:auto;\' >Deselect</button>\r\n                    <div id=\"jstree\" class=\'col-12\'></div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div class=\"col-xl-7 order-xl-1\">\r\n        <div class=\"card bg-secondary shadow\">\r\n          <div class=\"card-header bg-white border-0\">\r\n            <div class=\"row align-items-center\">\r\n                <h3 class=\"col-12 mb-0\">{{ __(\'Edit Code\') }}</h3>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <form method=\"post\" action=\"{{ route(\'addcode.update\',$code->id) }}\" enctype=\"multipart/form-data\" autocomplete=\"off\">\r\n                @csrf\r\n                @method(\'put\')\r\n                  <div class=\"pl-lg-4\">\r\n                    <input type=\"hidden\" name=\"parent\" id=\"\" class=\'parent_id\'>\r\n                  </div>\r\n                   <!-- $tags ?? \'\' }} -->\r\n                  <div class=\"text-center\">\r\n                      <button type=\"submit\" class=\"btn btn-success mt-4\">{{ __(\'Save\') }}</button>\r\n                  </div>\r\n                </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n@endsection\r\n  <!-- /.box -->\r\n  <?php\r\n    function get_dep($select = null,$dep_hide = null) {\r\n      $tags=App\\Tag::selectRaw(\'name as text\')\r\n      ->selectRaw(\'id as id\')\r\n      ->selectRaw(\'parent as parent\')->orderBy(\'name\',\'asc\')\r\n      ->get([\'text\', \'parent\', \'id\']);\r\n      $data=[];\r\n      $obj=[];\r\n      foreach ($tags as $key => $tag) {\r\n        if($select !== null && in_array($tag->id,$select)){\r\n          $obj[\'state\']=[\r\n            \'opend\'   =>true,\r\n            \'selected\'=>true,\r\n            \'disabled\' => false,\r\n          ];\r\n        }else{\r\n          $obj[\'state\']=[\r\n          \'opend\'   =>false,\r\n          \'selected\'=>false,\r\n          // \'disabled\' => true,\r\n          ];\r\n        }\r\n        $tag->parent = $tag->parent ? $tag->parent :\'#\';\r\n        $obj[\'id\']=$tag->id;\r\n        $obj[\'text\']=$tag->text;\r\n        $obj[\'parent\']=$tag->parent;\r\n        array_push($data,$obj);\r\n      }\r\n      return json_encode($data, JSON_UNESCAPED_UNICODE);\r\n    }\r\n  ?>', NULL, NULL, NULL, '2020-07-26 08:51:51', '2020-07-26 08:51:51'),
(8, 'select2 files', '// links\r\n<link href=\"https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css\" rel=\"stylesheet\" />\r\n\r\n@push(\'js\')\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js\"></script>\r\n@endpush\r\n\r\n// files\r\n\r\n<link rel=\"stylesheet\" href=\"{{ url(\'/\') }}/select2/select2.min.css\">\r\n@push(\'js\')\r\n<script src=\"{{ url(\'/select2/select2.min.js\') }}\"></script>\r\n@endpush', NULL, 'files/299581177select2.rar', NULL, '2020-07-26 10:24:57', '2020-07-26 10:24:57'),
(9, 'form simple', '{!! Form::open([\'url\'=>aurl(\'products\'),\'method\'=>\'put\',\'files\'=>true,\'id\'=>\'product_form\']) !!}\r\n\r\n<div id=\"product_setting\" class=\"tab-pane fade\">\r\n	<h3> {{ trans(\'admin.product_setting\') }} </h3>\r\n	<div class=\"form-group  col-md-3 col-lg-3 col-sm-3 col-xs-12\">\r\n		{!! Form::label(\'price\',trans(\'admin.price\')) !!}\r\n		{!! Form::text(\'price\',$product->price,[\'class\'=>\'form-control\',\'placeholder\'=>trans(\'admin.price\')]) !!}\r\n	</div>\r\n	<div class=\"form-group  col-md-3 col-lg-3 col-sm-3 col-xs-12 \">\r\n		{!! Form::label(\'stock\',trans(\'admin.stock\')) !!}\r\n		{!! Form::text(\'stock\',$product->stock,[\'class\'=>\'form-control\',\'placeholder\'=>trans(\'admin.stock\')]) !!}\r\n	</div>\r\n	<div class=\"form-group col-md-3 col-lg-3 col-sm-3 col-xs-12\">\r\n		{!! Form::label(\'start_at\',trans(\'admin.start_at\')) !!}\r\n		{!! Form::text(\'start_at\',$product->start_at,[\'class\'=>\'form-control datepicker\',\'autocomplete\'=>\'off\',\'placeholder\'=>trans(\'admin.start_at\')]) !!}\r\n	</div>\r\n	<div class=\"form-group col-md-3 col-lg-3 col-sm-3 col-xs-12\">\r\n		{!! Form::label(\'end_at\',trans(\'admin.end_at\')) !!}\r\n		{!! Form::text(\'end_at\',$product->end_at,[\'class\'=>\'form-control datepicker\',\'placeholder\'=>trans(\'admin.end_at\'),\'autocomplete\'=>\'off\']) !!}\r\n	</div>\r\n	<div class=\"clearfix\"></div>\r\n	<hr />\r\n	<div class=\"form-group  col-md-4 col-lg-4 col-sm-4 col-xs-12\">\r\n		{!! Form::label(\'price_offer\',trans(\'admin.price_offer\')) !!}\r\n		{!! Form::text(\'price_offer\',$product->price_offer,[\'class\'=>\'form-control\',\'placeholder\'=>trans(\'admin.price_offer\')]) !!}\r\n	</div>\r\n	<div class=\"form-group col-md-4 col-lg-4 col-sm-4 col-xs-12\">\r\n		{!! Form::label(\'start_offer_at\',trans(\'admin.start_offer_at\')) !!}\r\n		{!! Form::text(\'start_offer_at\',$product->start_offer_at,[\'class\'=>\'form-control datepicker\',\'placeholder\'=>trans(\'admin.start_offer_at\'),\'autocomplete\'=>\'off\']) !!}\r\n	</div>\r\n	<div class=\"form-group col-md-4 col-lg-4 col-sm-4 col-xs-12\">\r\n		{!! Form::label(\'end_offer_at\',trans(\'admin.end_offer_at\')) !!}\r\n		{!! Form::text(\'end_offer_at\',$product->end_offer_at,[\'class\'=>\'form-control datepicker\',\'placeholder\'=>trans(\'admin.end_offer_at\'),\'autocomplete\'=>\'off\']) !!}\r\n	</div>\r\n	<div class=\"clearfix\"></div>\r\n		<hr />\r\n	<div class=\"form-group\">\r\n		{!! Form::label(\'status\',trans(\'admin.status\')) !!}\r\n		{!! Form::select(\'status\',[\'pending\'=>trans(\'admin.pending\'), \'refused\'=>trans(\'admin.refused\'), \'active\'=>trans(\'admin.active\')],$product->status,[\'class\'=>\'form-control status\',\'placeholder\'=>trans(\'admin.status\')]) !!}\r\n	</div>\r\n	<div class=\"form-group reason {{ $product->status != \'refused\'?\'hidden\':\'\' }}\">\r\n		{!! Form::label(\'reason\',trans(\'admin.refused_reason\')) !!}\r\n		{!! Form::textarea(\'reason\',$product->reason,[\'class\'=>\'form-control\',\'placeholder\'=>trans(\'admin.refused_reason\')]) !!}\r\n	</div>\r\n</div>\r\n   {!! Form::close() !!}', NULL, NULL, NULL, '2020-07-26 17:05:08', '2020-07-26 17:05:08'),
(10, 'datepickerf files', '<script src=\"{{ url(\'/datepicker/bootstrap-datepicker.min.js\') }}\"></script>\r\n\r\n  <link rel=\"stylesheet\" href=\"{{ url(\'/\') }}/bootstrap-datepicker.min.css\">', NULL, 'files/804747720bootstrap-datepicker.min.rar', NULL, '2020-07-26 17:30:54', '2020-07-28 13:17:11'),
(11, 'get selected option', 'var status = $(\'.status option:selected\').val();', NULL, NULL, NULL, '2020-07-26 17:38:28', '2020-07-26 17:44:35'),
(12, 'get element by value', '$(\"a.page-link:contains(\'‹\')\").attr(\'href\',\'/\' + ths + lst);', 'get element by value\r\nit would be valid to select option in select with its value', NULL, NULL, '2020-07-26 17:46:07', '2020-07-26 17:46:07'),
(13, 'one to many->where(\'\' , \'\')', 'public function files() {\r\n		return $this->hasMany(\'App\\File\', \'relation_id\', \'id\')->where(\'file_type\', \'product\');\r\n	}', 'get all files of product\r\n with forgn key for relation is \r\nrelation_id in files table \r\n on \r\nid in product table\r\nand where select rows with file type = product', NULL, NULL, '2020-07-27 11:35:24', '2020-07-27 11:35:24'),
(14, 'update simple', '$(\'.maxContainer\').on(\"click\",\".updateSave\", function() {\r\n        formData=new FormData($(\'.updateForm\')[0]);\r\n        var url= $(\'.updateForm\')[0].action;//alert(formData);\r\n        var method= $(\'.updateForm\')[0].method;\r\n        $(\'.modalMsg\').html(\'\');\r\n        $(\'.updateSave\').attr(\'disabled\',\'disabled\');\r\n        $(\'.done\').css(\'display\',\'none\');\r\n        $(\'.wrong\').css(\'display\',\'none\');\r\n        $.ajax({\r\n            url: url,\r\n            type: method,\r\n            data: formData,\r\n            dataType:\'JSON\',\r\n            contentType: false,\r\n            cache: false,\r\n            processData: false,\r\n            success: function(data) {\r\n                if(data.status==true){\r\n                    $(\'.wrong\').css(\'display\',\'none\');\r\n                    $(\'.title\').css(\'display\',\'none\');\r\n                    $(\'.done\').css(\'display\',\'block\');\r\n                    $(\'.done\').text(data.msg);\r\n                    $(\".allElements .container\" + data.id).replaceWith(data.created);\r\n                    $(\'.0found\').remove();\r\n                    // $(\"<h2>Hello world!</h2>\").replaceAll(\"p\");\r\n                    setTimeout(() => {\r\n                         $(\'.createClose\').click();\r\n                         $(\'.updateSave\').removeAttr(\'disabled\');\r\n                         $(\'.input\').val(\'\');\r\n                    }, 2000);\r\n                }else{\r\n                    $(\'.done\').css(\'display\',\'none\');\r\n                    $(\'.title\').css(\'display\',\'none\');\r\n                    $(\'.wrong\').css(\'display\',\'block\');\r\n                    $.each(data.msg, function (key, val) {\r\n                        $(\"#\" + key + \"_eror\").text(val);\r\n                    });\r\n                    // console.log(data.msg);\r\n                    $(\'.wrong\').text(\'Invalid data.\');\r\n                    $(\'.updateSave\').removeAttr(\'disabled\');\r\n                }\r\n                setTimeout(() => {\r\n                    $(\'.done\').css(\'display\',\'none\');\r\n                    $(\'.wrong\').css(\'display\',\'none\');\r\n                    $(\'.title\').css(\'display\',\'block\');\r\n                }, 2000);\r\n            },error: function(data) {\r\n                // jqXHR, textStatus, errorThrown\r\n                // console.log(data.created);\r\n                $(\'.done\').css(\'display\',\'none\');\r\n                $(\'.wrong\').css(\'display\',\'block\');\r\n                $(\'.wrong\').text(\'Some thing wrong, Please try again.\');\r\n                $(\'.updateSave\').removeAttr(\'disabled\');\r\n                setTimeout(() => {\r\n                    $(\'.done\').css(\'display\',\'none\');\r\n                    $(\'.wrong\').css(\'display\',\'none\');\r\n                    $(\'.title\').css(\'display\',\'block\');\r\n                }, 2000);\r\n            },\r\n        });\r\n    });\r\n\r\n/////////////// update modal //////////////////////////\r\n\r\n                                        <a  data-info=\'{{$course}}\' data-toggle=\"modal\" data-target=\".updateModal\"  href=\"{{ route(\'courses.edit\', $course) }}\" class=\"btn btn-primary btn-sm showModal\">Edit</a>\r\n\r\n\r\n    <div class=\"modal fade bd-example-modal-lg updateModal\" id=\"\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"createModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\" >\r\n        <div class=\"modal-content card bg-secondary shadow\">\r\n            <div class=\"p-0 m-0 mt-3 pr-3\">\r\n                <button type=\"button\" class=\"close createClose pt-3\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                <h5 style=\'font-size:16px;margin:auto;\' class=\"alert col-11 title createMessage pl-0 ml-4\">Update course.</h5>\r\n                <h5 style=\'font-size:16px;margin:auto;display:none;\' class=\"alert alert-success done col-11\"></h5>\r\n                <h5 style=\'font-size:16px;margin:auto;display:none;\' class=\"alert alert-danger wrong col-11\"></h5>\r\n            </div>\r\n            <div class=\"modal-body mt-0 pt-2\">\r\n                <form class=\'updateForm\' method=\"post\" action=\"{{ route(\'courses.update\',$course) }}\" enctype=\"multipart/form-data\" autocomplete=\"off\" >\r\n                    @csrf\r\n                    @method(\'PATCH\')\r\n                    <div class=\"form-group\">\r\n                        <input type=\"hidden\" name=\"id\" value=\'\' class=\"input-id\">  \r\n                        <label class=\"form-control-label\" for=\"course-title\">{{ __(\'Title\') }}</label>\r\n                        <input type=\"text\" name=\"title\" id=\"course-title\" class=\"input-title input form-control\" placeholder=\"{{ __(\'Title\') }}\" value=\"\" required autofocus>\r\n                        <strong class=\'text-danger modalMsg\'style=\'font-size:13px;\'id=\'title_eror\'></strong>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-control-label\" for=\"description\">{{ __(\'Description\') }}</label>\r\n                        <textarea type=\"text\" name=\"description\" id=\"description\" class=\"input-description input form-control\" placeholder=\"{{ __(\'description\') }}\"  required autofocus></textarea>\r\n                        <strong class=\'text-danger modalMsg\'style=\'font-size:13px;\'id=\'description_eror\'></strong>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-control-label\" for=\"course-link\">{{ __(\'Link\') }}</label>\r\n                        <input type=\"text\" name=\"link\" id=\"course-link\" class=\"input-link input form-control\" placeholder=\"{{ __(\'Link\') }}\" value=\"\" required>\r\n                        <strong class=\'text-danger modalMsg\'style=\'font-size:13px;\'id=\'link_eror\'></strong>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-control-label\" for=\"course-status\">{{ __(\'Status\') }}</label>\r\n                        <select name=\"status\" required class=\"input-status form-control\">\r\n                            <option value=\"0\">FREE</option>\r\n                            <option value=\"1\">PAID</option>\r\n                        </select>\r\n                        <strong class=\'text-danger modalMsg\'style=\'font-size:13px;\'id=\'status_eror\'></strong>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-control-label\" for=\"course-track_id\">{{ __(\'Track\') }}</label>                            \r\n                        <select name=\"track_id\" required class=\"input-track_id form-control\">\r\n                            @foreach(\\App\\Track::all() as $track)\r\n                            <option value=\"{{ $track->id }}\">{{ $track->name }}</option>\r\n                            @endforeach\r\n                        </select>\r\n                        <strong class=\'text-danger modalMsg\'style=\'font-size:13px;\'id=\'track_id_eror\'></strong>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-control-label\" for=\"course-image\">{{ __(\'Image\') }}</label>\r\n                        <input type=\"file\" name=\"image\" id=\"course-image\" class=\"image-name input form-control\" required>\r\n                        <strong class=\'text-danger modalMsg\'style=\'font-size:13px;\'id=\'image_eror\'></strong>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer mt-0 pt-0\">\r\n                <button type=\"button\" class=\"btn btn-danger createClose\" data-dismiss=\"modal\">Close</button>\r\n                <button type=\"button\" class=\"btn btn-primary updateSave\">Save</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>', '///////// fill modal with data ///////////////\r\n    $(\'.maxContainer\').on(\'show.bs.modal\',\'.updateModal\', function (event) {\r\n        var button = $(event.relatedTarget); // Button that triggered the modal\r\n        var info=button.data(\'info\');\r\n        var modal = $(this);\r\n        $.each(info,function (index,value) {\r\n            if(modal.find(\'.modal-body > .updateForm > .form-group > .input-\' + index)){\r\n                if(index==\'right_answer\'){\r\n                    // var answers=$(\'.input-answers\').val();\r\n                    var answers=$(\'.input-answers\').val().split(\'\\n\');\r\n                    var select=\"<option value=\'\'> Choose the right answer</option>\";\r\n                    $.each(answers,function (index,value) {\r\n                        if(value !=\'\' && value != \',\'){\r\n                            select += \"<option value=\'\" + value + \"\'>\" + value + \"</option>\";\r\n                        }\r\n                    })\r\n                    modal.find(\'.modal-body > .updateForm > .form-group > .input-right_answer\').html(select);\r\n                }\r\n                modal.find(\'.modal-body > .updateForm > .form-group > .input-\' + index).val(value);\r\n            }\r\n        })\r\n\r\n        // modal.find(\'.modal-body #input-name\').val(inf);\r\n        // var recipient = button.data(\'whatever\') // Extract info from data-* attributes\r\n        // // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).\r\n        // // Update the modal\'s content. We\'ll use jQuery here, but you could use a data binding library or other methods instead.\r\n        // modal.find(\'.modal-title\').text(\'New message to \' + recipient)\r\n    })\r\n\r\n//////////////////update function //////////////////////////\r\n\r\n    public function update(Request $request,$course)\r\n    {\r\n        $rules = [\r\n            \'title\' => \'required|min:20|max:150\',\r\n            \'status\' => \'required|integer|in:0,1\',\r\n            \'description\' => \'required|min:20|max:400\',\r\n            \'link\' => \'required|url\',\r\n            \'track_id\' => \'required|integer\',\r\n        ];\r\n        if($request->ajax()){\r\n            $validator = Validator::make($request->all(),$rules);\r\n            if($validator->fails()) {\r\n                return response()->json([\'status\' => false,\'msg\'=> $validator->errors()->getMessageBag()]);\r\n            }\r\n        }else{\r\n            $this->validate($request, $rules);\r\n        }\r\n\r\n        $slug=strtolower(str_replace(\' \',\'-\',$request->title));\r\n        $request->request->add([\'slug\' => $slug]);\r\n\r\n        $course = Course::findOrFail($request->id);\r\n        $photo_inDb=$course->photo->filename;\r\n        if($course->update($request->all())){\r\n\r\n            $file_to_store=\'\';\r\n\r\n            if($file = $request->file(\'image\')) {\r\n    \r\n                $filename = $file->getClientOriginalName();\r\n                $fileextension = $file->getClientOriginalExtension();\r\n                $file_to_store = time() . \'_\' . explode(\'.\', $filename)[0] . \'_.\'.$fileextension;\r\n    \r\n                if($file->move(\'images\', $file_to_store)) {\r\n                    if($course->photo) {\r\n                        $photo = $course->photo;\r\n                        // remove the old image\r\n                        $filename = $photo->filename;\r\n                        $photos=DB::table(\'photoable\')->where(\'filename\',$filename)->pluck(\'filename\');\r\n                        if(count($photos)<2){\r\n                            unlink(\'images/\'.$filename);\r\n                            // delete course photo\r\n                        }\r\n                        $photo->filename = $file_to_store;\r\n                        $photo->save();\r\n                    }else {\r\n                        Photo::create([\r\n                            \'filename\' => $file_to_store,\r\n                            \'photoable_id\' => $course->id,\r\n                            \'photoable_type\' => \'App\\Course\',\r\n                        ]);\r\n                    }\r\n                }\r\n            }\r\n            if($request->ajax()){\r\n                if($file_to_store==\'\'){$file_to_store=$photo_inDb;}\r\n                $created=$this->newCourse($course,$file_to_store);\r\n                return response()->json([\'status\' => true,\'id\' => $course->id,\'msg\'=> \'Course updated successfully.\',\'created\'=>$created]);\r\n            }else{\r\n                return redirect(\'/admin/courses\')->withStatus(\'Course successfully created.\');\r\n            }\r\n\r\n        }else{\r\n\r\n        }\r\n    }', NULL, NULL, '2020-07-27 15:41:32', '2020-07-27 15:41:32'),
(16, 'disabled or enabled element', '$(\'.updateSave\').attr(\'disabled\',\'disabled\');\r\n\r\n$(\'.updateSave\').removeAttr(\'disabled\');', NULL, NULL, NULL, '2020-07-27 15:50:34', '2020-07-27 15:53:23'),
(17, 'fill modall with data for update', '///////// fill modal with data ///////////////\r\n\r\n    $(\'.maxContainer\').on(\'show.bs.modal\',\'.updateModal\', function (event) {\r\n        var button = $(event.relatedTarget); // Button that triggered the modal\r\n        var info=button.data(\'info\');\r\n        var modal = $(this);\r\n        $.each(info,function (index,value) {\r\n            if(modal.find(\'.modal-body > .updateForm > .form-group > .input-\' + index)){\r\n                if(index==\'right_answer\'){\r\n                    // var answers=$(\'.input-answers\').val();\r\n                    var answers=$(\'.input-answers\').val().split(\'\\n\');\r\n                    var select=\"<option value=\'\'> Choose the right answer</option>\";\r\n                    $.each(answers,function (index,value) {\r\n                        if(value !=\'\' && value != \',\'){\r\n                            select += \"<option value=\'\" + value + \"\'>\" + value + \"</option>\";\r\n                        }\r\n                    })\r\n                    modal.find(\'.modal-body > .updateForm > .form-group > .input-right_answer\').html(select);\r\n                }\r\n                modal.find(\'.modal-body > .updateForm > .form-group > .input-\' + index).val(value);\r\n            }\r\n        })\r\n\r\n        // modal.find(\'.modal-body #input-name\').val(inf);\r\n        // var recipient = button.data(\'whatever\') // Extract info from data-* attributes\r\n        // // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).\r\n        // // Update the modal\'s content. We\'ll use jQuery here, but you could use a data binding library or other methods instead.\r\n        // modal.find(\'.modal-title\').text(\'New message to \' + recipient)\r\n    })', 'get data from object come from attr  at toggle button', NULL, NULL, '2020-07-27 15:55:51', '2020-07-27 15:55:51'),
(18, 'confirm message', 'if (confirm(\'Are you sure you want to delete this?\')) {\r\n}', NULL, NULL, NULL, '2020-07-27 17:02:43', '2020-07-27 17:02:43'),
(19, 'dropzone example', '@push(\'js\')\r\n  <!-- <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.5.1/min/dropzone.min.js\"></script> -->\r\n  <!-- <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.5.1/min/dropzone.min.css\"> -->\r\n  <link rel=\"stylesheet\" href=\"{{ asset(\'/design/Adminlte/dropzone/dropzone.min.css\') }}\">\r\n  <script src=\"{{ url(\'/\') }}/design/Adminlte/dropzone/dropzone.min.js\"></script>\r\n\r\n  <script type=\"text/javascript\">\r\n  Dropzone.autoDiscover = false;\r\n  $(document).ready(function(){\r\n\r\n  $(\'#dropzonefileupload\').dropzone({\r\n    url:\"{{ aurl(\'upload/image/\'.$product->id) }}\",\r\n    // paramName:\'files[]\',\r\n    paramName:\'file\',\r\n    autoDiscover:false,\r\n    // uploadMultiple:true,\r\n    uploadMultiple:false,\r\n    maxFiles:15,\r\n    maxFilessize:3, // MB\r\n    acceptedFiles:\'image/*\',\r\n    dictDefaultMessage:\'اضغط هنا لرفع الملفات او قم بسحب الملفات  وافلاتها هنا\',\r\n    dictRemoveFile:\"{{ trans(\'admin.delete\') }}\",\r\n    params:{\r\n      _token:\'{{ csrf_token() }}\'\r\n    },\r\n    addRemoveLinks:true,\r\n    removedfile:function(file)\r\n    {\r\n      //file.fid\r\n      if (confirm(\'Are you sure you want to delete this image ?\')) {\r\n        $.ajax({\r\n          dataType:\'json\',\r\n          type:\'post\',\r\n          url:\"{{ aurl(\'delete/image\') }}\",\r\n          data:{_token:\'{{ csrf_token() }}\',id:file.fid},\r\n        error: function(jqXHR, textStatus, errorThrown) {\r\n          // console.log(jqXHR);\r\n        },\r\n        });\r\n      var fmock;\r\n      return (fmock = file.previewElement) != null ? fmock.parentNode.removeChild(file.previewElement):void 0;\r\n    }\r\n    },\r\n    init:function(){\r\n      // foreach($product->files  as $file)\r\n      @if($product->files()->get())\r\n      @foreach($product->files()->get() as $file)\r\n      var mock = {name: \'{{ $file->name }}\',fid: \'{{ $file->id }}\',size: \'{{ $file->size }}\',type: \'{{ $file->mime_type }}\' };\r\n      this.emit(\'addedfile\',mock);\r\n      this.options.thumbnail.call(this,mock,\"{{ url(\'storage/\'.$file->full_file) }}\");\r\n      @endforeach\r\n      @endif\r\n      this.on(\'sending\',function(file,xhr,formData){\r\n        formData.append(\'fid\',\'\');\r\n        file.fid = \'\';\r\n      });\r\n\r\n      this.on(\'success\',function(file,response){\r\n        file.fid = response.id;\r\n      });\r\n\r\n\r\n    }\r\n  });\r\n\r\n\r\n  $(\'#mainphoto\').dropzone({\r\n    url:\"{{ aurl(\'update/image/\'.$product->id) }}\",\r\n    paramName:\'file\',\r\n    autoDiscover:false,\r\n    uploadMultiple:false,\r\n    maxFiles:1,\r\n    maxFilessize:3, // MB\r\n    acceptedFiles:\'image/*\',\r\n    dictDefaultMessage:\'{{ trans(\'admin.mainphoto\') }}\',\r\n    dictRemoveFile:\'{{ trans(\'admin.delete\') }}\',\r\n    params:{\r\n      _token:\'{{ csrf_token() }}\'\r\n    },\r\n    addRemoveLinks:true,\r\n    removedfile:function(file)\r\n    {\r\n      if (confirm(\'Are you sure you want to delete this image ?\')) {\r\n        //file.fid\r\n        $.ajax({\r\n          dataType:\'json\',\r\n          type:\'post\',\r\n          url:\"{{ aurl(\'delete/product/image/\'.$product->id) }}\",\r\n          data:{_token:\'{{ csrf_token() }}\'}\r\n        });\r\n       var fmock;\r\n       return (fmock = file.previewElement) != null ? fmock.parentNode.removeChild(file.previewElement):void 0;\r\n      }\r\n    },\r\n    init:function(){\r\n\r\n      @if(!empty($product->photo))\r\n      var mock = {name: \'{{ $product->title }}\',size: \'\',type: \'\' };\r\n      this.emit(\'addedfile\',mock);\r\n      this.options.thumbnail.call(this,mock,\"{{ url(\'storage/\'.$product->photo) }}\");\r\n      $(\'.dz-progress\').remove();\r\n      @endif\r\n\r\n      this.on(\'sending\',function(file,xhr,formData){\r\n        formData.append(\'fid\',\'\');\r\n        file.fid = \'\';\r\n      });\r\n\r\n      this.on(\'success\',function(file,response){\r\n        file.fid = response.id;\r\n      });\r\n    }\r\n  });\r\n  });\r\n  </script>\r\n  <style type=\"text/css\">\r\n  .dz-image img {\r\n    width:100px;\r\n    height:100px;\r\n  }\r\n  </style>\r\n@endpush\r\n\r\n<div id=\"product_media\" class=\"tab-pane fade\">\r\n	<h3>{{ trans(\'admin.product_media\') }}</h3>\r\n\r\n	<hr />\r\n\r\n	<center><h3>{{ trans(\'admin.mainphoto\') }}</h3></center>\r\n	<div class=\"dropzone\" id=\"mainphoto\"></div>\r\n	<hr />\r\n	<center><h3>{{ trans(\'admin.other_files\') }}</h3></center>\r\n	<div class=\"dropzone\" id=\"dropzonefileupload\"></div>\r\n</div>', 'public function delete_file() {\r\n		if (request()->has(\'id\')) {\r\n			up()->delete(request(\'id\'));\r\n		}\r\n	}\r\n\r\n\r\n	public function delete($id) {\r\n    // dd($id);\r\n		$file = File::find($id);\r\n		if (!empty($file)) {\r\n			Storage::has(\'public/\' . $file->full_file)?Storage::delete(\'public/\' . $file->full_file):\"\";\r\n			$file->delete();\r\n		}\r\n	}\r\n\r\n	public function delete_main_image($id) {\r\n    $product = Product::find($id);\r\n		Storage::delete(\'public/\' . $product->photo);\r\n		$product->photo = null;\r\n		$product->save();\r\n		//, \'photo\' => $product->photo\r\n		return response([\'status\' => true], 200);\r\n	}\r\n\r\n	public function update_product_image($id) {\r\n		$product = Product::where(\'id\', $id)->update([\r\n				\'photo\'         => up()->upload([\r\n						\'file\'        => \'file\',\r\n						\'path\'        => \'products/\'.$id,\r\n						\'upload_type\' => \'single\',\r\n						\'delete_file\' => \'\',\r\n					]),\r\n			]);\r\n		//, \'photo\' => $product->photo\r\n		return response([\'status\' => true], 200);\r\n	}', NULL, NULL, '2020-07-27 17:38:56', '2020-07-27 17:38:56'),
(20, 'dropzone files', '<!-- <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.5.1/min/dropzone.min.js\"></script> -->\r\n  <!-- <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.5.1/min/dropzone.min.css\"> -->\r\n\r\n  <link rel=\"stylesheet\" href=\"{{ asset(\'/dropzone/dropzone.min.css\') }}\">\r\n  <script src=\"{{ url(\'/\') }}/dropzone/dropzone.min.js\"></script>', NULL, 'files/978138571dropzone.min.rar', NULL, '2020-07-27 17:40:14', '2020-07-27 17:41:03'),
(21, 'where wherein orwhere pluck', '$sizes = Size::where(\'is_public\', \'yes\')\r\n				->whereIn(\'department_id\', $dep_list)\r\n				->orWhere(\'department_id\', request(\'dep_id\'))\r\n				->pluck(\'name_\'.session(\'lang\'), \'id\');', NULL, NULL, NULL, '2020-07-27 18:00:25', '2020-07-27 18:01:02'),
(22, 'fill select with data in variable', '{!! Form::select(\'size_id\',$sizes,$product->size_id,[\'class\'=>\'form-control\',\'placeholder\'=>trans(\'admin.size_id\')]) !!}\r\n\r\nname => size_id\r\noptions data => $sizes\r\nselected option => $product->size_id', NULL, NULL, NULL, '2020-07-27 18:14:21', '2020-07-27 18:18:49'),
(23, 'get all parent', 'function get_parent($dep_id) {\r\n		$department = \\App\\Model\\Department::findOrFail($dep_id);\r\n    if($department->parent !== null && $department->parent > 0 ){\r\n      return get_parent($department->parent) . \',\' . $dep_id;\r\n    }else{\r\n      return $dep_id;\r\n    }\r\n    // return json_encode($dep_arr, JSON_UNESCAPED_UNICODE);\r\n	}', 'يقوم هذا الكود بالعثور علي كل الاقسام الاب وليس الاقسام المجاوره التي تشترك في نفس الاب', NULL, NULL, '2020-07-28 09:15:04', '2020-07-28 09:15:04'),
(24, 'get all sup depatement and delete it', 'public static function delete_parent($id) {\r\n		$department_parent = Department::where(\'parent\', $id)->get();\r\n		foreach ($department_parent as $sub) {\r\n			self::delete_parent($sub->id);\r\n			if (!empty($sub->icon)) {\r\n				Storage::has(\'public/\' . $sub->icon)?Storage::delete(\'public/\' . $sub->icon):\'\';\r\n			}\r\n			$subdepartment = Department::find($sub->id);\r\n			if (!empty($subdepartment)) {\r\n				$subdepartment->delete();\r\n			}\r\n		}\r\n		$dep = Department::find($id);\r\n\r\n		if (!empty($dep->icon)) {\r\n			Storage::has(\'public/\' . $dep->icon)?Storage::delete(\'public/\' . $dep->icon):\'\';\r\n		}\r\n		$dep->delete();\r\n	}', NULL, NULL, NULL, '2020-07-28 09:40:28', '2020-07-28 09:40:28'),
(25, 'convert array to json object', 'json_encode($dep_arr, JSON_UNESCAPED_UNICODE);', NULL, NULL, NULL, '2020-07-28 12:12:39', '2020-07-28 12:12:39'),
(26, 'compine two arrays', 'array_merge($array1,$array2);', 'compine two arrays', NULL, NULL, '2020-07-28 12:14:57', '2020-07-28 12:14:57'),
(27, 'compine two arrays', 'array_merge($array1,$array2);', NULL, NULL, NULL, '2020-07-28 12:17:05', '2020-07-28 12:17:05'),
(29, 'merge two arrays after convert them from json object to arrras', '$sizes=array_merge(json_decode($sizes1,true),json_decode($sizes2,true));', '$sizes1 is stdClass \r\nconvert it to array with json_decode($sizes1,true) \r\n\r\ncompine two arrays\r\narray_merge(json_decode($sizes1,true),json_decode($sizes2,true));', NULL, NULL, '2020-07-28 13:03:45', '2020-07-28 13:03:45'),
(30, 'convert object to array', 'json_decode($sizes1,true)', NULL, NULL, NULL, '2020-07-28 13:04:57', '2020-07-28 13:04:57'),
(31, 'convert object to array', 'json_decode($sizes1,true)', NULL, NULL, NULL, '2020-07-28 13:04:58', '2020-07-28 13:04:58'),
(32, 'get object from stdClass', 'get_object_vars($stdclass);', NULL, NULL, NULL, '2020-07-28 13:09:08', '2020-07-28 13:09:08'),
(33, 'get object from stdClass', 'get_object_vars($stdclass);', NULL, NULL, NULL, '2020-07-28 13:09:09', '2020-07-28 13:09:09'),
(34, 'know if varraiable is object', 'is_object($value)', NULL, NULL, NULL, '2020-07-28 13:10:16', '2020-07-28 13:10:16'),
(35, 'know if varraiable is object', 'is_object($value)', NULL, NULL, NULL, '2020-07-28 13:10:16', '2020-07-28 13:10:16'),
(36, 'color input', '{!! Form::color(\'color\',$color->color,[\'class\'=>\'form-control\']) !!}\r\n//$color->color  it is like #f60404', 'color input value store in data base', NULL, NULL, '2020-07-28 13:24:59', '2020-07-28 13:24:59'),
(37, 'fil select with data form data base', '{!! Form::label(\'color_id\',trans(\'admin.color_id\')) !!}\r\n\r\n			{!! Form::select(\'color_id\',App\\Model\\Color::pluck(\'name_\'.lang(),\'id\'),$product->color_id,[\'class\'=>\'form-control\',\'placeholder\'=>trans(\'admin.color_id\')]) !!}\r\n\r\n\r\n\r\n$product->color_id = selected value\r\n\'color_id\'                 = selected name\r\nquery sentence      = option data', NULL, NULL, NULL, '2020-07-28 13:29:40', '2020-07-28 13:32:23'),
(38, 'datepicker simple', '@push(\'js\')\r\n<script type=\"text/javascript\">\r\n$(\'.datepicker\').datepicker({\r\n	rtl:\'{{ session(\'lang\')==\'ar\'?true:false }}\',\r\n	language:\'{{ session(\'lang\') }}\',\r\n	format:\'yyyy-mm-dd\',\r\n	autoclose:false,\r\n	todayBtn:true,\r\n	clearBtn:true\r\n});\r\n$(document).on(\'change\',\'.status\',function(){\r\n	var status = $(\'.status option:selected\').val();\r\n	if(status == \'refused\')\r\n	{\r\n		$(\'.reason\').removeClass(\'hidden\');\r\n	}else{\r\n		$(\'.reason\').addClass(\'hidden\');\r\n	}\r\n});\r\n\r\n\r\n</script>\r\n@endpush\r\n<div id=\"product_setting\" class=\"tab-pane fade\">\r\n	<h3> {{ trans(\'admin.product_setting\') }} </h3>\r\n	<div class=\"form-group  col-md-3 col-lg-3 col-sm-3 col-xs-12\">\r\n		{!! Form::label(\'price\',trans(\'admin.price\')) !!}\r\n		{!! Form::text(\'price\',$product->price,[\'class\'=>\'form-control\',\'placeholder\'=>trans(\'admin.price\')]) !!}\r\n	</div>\r\n	<div class=\"form-group  col-md-3 col-lg-3 col-sm-3 col-xs-12 \">\r\n		{!! Form::label(\'stock\',trans(\'admin.stock\')) !!}\r\n		{!! Form::text(\'stock\',$product->stock,[\'class\'=>\'form-control\',\'placeholder\'=>trans(\'admin.stock\')]) !!}\r\n	</div>\r\n	<div class=\"form-group col-md-3 col-lg-3 col-sm-3 col-xs-12\">\r\n		{!! Form::label(\'start_at\',trans(\'admin.start_at\')) !!}\r\n		{!! Form::text(\'start_at\',$product->start_at,[\'class\'=>\'form-control datepicker\',\'autocomplete\'=>\'off\',\'placeholder\'=>trans(\'admin.start_at\')]) !!}\r\n	</div>\r\n	<div class=\"form-group col-md-3 col-lg-3 col-sm-3 col-xs-12\">\r\n		{!! Form::label(\'end_at\',trans(\'admin.end_at\')) !!}\r\n		{!! Form::text(\'end_at\',$product->end_at,[\'class\'=>\'form-control datepicker\',\'placeholder\'=>trans(\'admin.end_at\'),\'autocomplete\'=>\'off\']) !!}\r\n	</div>\r\n	<div class=\"clearfix\"></div>\r\n	<hr />\r\n	<div class=\"form-group  col-md-4 col-lg-4 col-sm-4 col-xs-12\">\r\n		{!! Form::label(\'price_offer\',trans(\'admin.price_offer\')) !!}\r\n		{!! Form::text(\'price_offer\',$product->price_offer,[\'class\'=>\'form-control\',\'placeholder\'=>trans(\'admin.price_offer\')]) !!}\r\n	</div>\r\n	<div class=\"form-group col-md-4 col-lg-4 col-sm-4 col-xs-12\">\r\n		{!! Form::label(\'start_offer_at\',trans(\'admin.start_offer_at\')) !!}\r\n		{!! Form::text(\'start_offer_at\',$product->start_offer_at,[\'class\'=>\'form-control datepicker\',\'placeholder\'=>trans(\'admin.start_offer_at\'),\'autocomplete\'=>\'off\']) !!}\r\n	</div>\r\n	<div class=\"form-group col-md-4 col-lg-4 col-sm-4 col-xs-12\">\r\n		{!! Form::label(\'end_offer_at\',trans(\'admin.end_offer_at\')) !!}\r\n		{!! Form::text(\'end_offer_at\',$product->end_offer_at,[\'class\'=>\'form-control datepicker\',\'placeholder\'=>trans(\'admin.end_offer_at\'),\'autocomplete\'=>\'off\']) !!}\r\n	</div>\r\n	<div class=\"clearfix\"></div>\r\n		<hr />\r\n	<div class=\"form-group\">\r\n		{!! Form::label(\'status\',trans(\'admin.status\')) !!}\r\n		{!! Form::select(\'status\',[\'pending\'=>trans(\'admin.pending\'), \'refused\'=>trans(\'admin.refused\'), \'active\'=>trans(\'admin.active\')],$product->status,[\'class\'=>\'form-control status\',\'placeholder\'=>trans(\'admin.status\')]) !!}\r\n	</div>\r\n	<div class=\"form-group reason {{ $product->status != \'refused\'?\'hidden\':\'\' }}\">\r\n		{!! Form::label(\'reason\',trans(\'admin.refused_reason\')) !!}\r\n		{!! Form::textarea(\'reason\',$product->reason,[\'class\'=>\'form-control\',\'placeholder\'=>trans(\'admin.refused_reason\')]) !!}\r\n	</div>\r\n</div>', NULL, NULL, NULL, '2020-07-28 19:33:27', '2020-07-28 19:33:27'),
(39, 'has one', '<?php\r\n\r\nnamespace App\\Model;\r\n\r\nuse Illuminate\\Database\\Eloquent\\Model;\r\n\r\nclass Mall extends Model {\r\n    protected $table    = \'malls\';\r\n    protected $fillable = [\r\n        \'name_ar\',\r\n        \'name_en\',\r\n        \'country_id\',\r\n    ];\r\n\r\n    public function country_id() {\r\n        return $this->hasOne(\'App\\Model\\Country\', \'id\', \'country_id\');\r\n    }\r\n\r\n}', '// mal has one country_id\r\n// country_id in malls table refer to id in countries table\r\n//this realation ship take three parametres \r\n// other model ---- relation columen in other model ------  relation columen in current model', NULL, NULL, '2020-07-28 20:24:36', '2020-07-28 20:24:36'),
(40, 'has one', '<?php\r\n\r\nnamespace App\\Model;\r\n\r\nuse Illuminate\\Database\\Eloquent\\Model;\r\n\r\nclass Mall extends Model {\r\n    protected $table    = \'malls\';\r\n    protected $fillable = [\r\n        \'name_ar\',\r\n        \'name_en\',\r\n        \'country_id\',\r\n    ];\r\n\r\n    public function country_id() {\r\n        return $this->hasOne(\'App\\Model\\Country\', \'id\', \'country_id\');\r\n    }\r\n\r\n}', '// mal has one country_id\r\n// country_id in malls table refer to id in countries table\r\n//this realation ship take three parametres \r\n// other model ---- relation columen in other model ------  relation columen in current model', NULL, NULL, '2020-07-28 20:24:37', '2020-07-28 20:24:37'),
(41, 'some rules', '$data = $this->validate(request(),\r\n			[\r\n				\'title\'          => \'required\',\r\n				\'content\'        => \'required\',\r\n				\'department_id\'  => \'required|numeric\',\r\n				\'trade_id\'       => \'required|numeric\',\r\n				\'manu_id\'        => \'required|numeric\',\r\n				\'color_id\'       => \'sometimes|nullable|numeric\',\r\n				\'size_id\'        => \'sometimes|nullable|numeric\',\r\n				\'size\'           => \'sometimes|nullable\',\r\n				\'currency_id\'    => \'sometimes|nullable|numeric\',\r\n				\'price\'          => \'required|numeric\',\r\n				\'stock\'          => \'required|numeric\',\r\n				\'start_at\'       => \'required|date\',\r\n				\'end_at\'         => \'required|date\',\r\n				\'start_offer_at\' => \'sometimes|nullable|date\',\r\n				\'end_offer_at\'   => \'sometimes|nullable|date\',\r\n				\'price_offer\'    => \'sometimes|nullable|numeric\',\r\n				\'weight\'         => \'sometimes|nullable\',\r\n				\'weight_id\'      => \'sometimes|nullable|numeric\',\r\n				\'status\'         => \'sometimes|nullable|in:pending,refused,active\',\r\n				\'reason\'         => \'sometimes|nullable|numeric\',\r\n			], [], [\r\n				\'title\'          => trans(\'admin.title\'),\r\n				\'content\'        => trans(\'admin.content\'),\r\n				\'department_id\'  => trans(\'admin.department_id\'),\r\n				\'trade_id\'       => trans(\'admin.trade_id\'),\r\n				\'manu_id\'        => trans(\'admin.manu_id\'),\r\n				\'color_id\'       => trans(\'admin.color_id\'),\r\n				\'size_id\'        => trans(\'admin.size_id\'),\r\n				\'size\'           => trans(\'admin.size\'),\r\n				\'currency_id\'    => trans(\'admin.currency_id\'),\r\n				\'price\'          => trans(\'admin.price\'),\r\n				\'stock\'          => trans(\'admin.stock\'),\r\n				\'start_at\'       => trans(\'admin.start_at\'),\r\n				\'end_at\'         => trans(\'admin.end_at\'),\r\n				\'start_offer_at\' => trans(\'admin.start_offer_at\'),\r\n				\'end_offer_at\'   => trans(\'admin.end_offer_at\'),\r\n				\'price_offer\'    => trans(\'admin.price_offer\'),\r\n				\'weight\'         => trans(\'admin.weight\'),\r\n				\'weight_id\'      => trans(\'admin.weight_id\'),\r\n				\'status\'         => trans(\'admin.status\'),\r\n				\'reason\'         => trans(\'admin.reason\'),\r\n			]);\r\n            // \'phone\' => \'required|numeric|between:9,11\',\r\n            \'phone\' => \'required|numeric|regex:/(01)[0-9]{9}/\',\r\n            \'email\'=> \'required|email|unique:phonebooks,email,\'.$request->id', NULL, NULL, NULL, '2020-07-29 11:53:27', '2020-08-16 00:15:26'),
(42, 'ajax simple', '$(document).on(\"click\",\".updateSave\", function() {\r\n        formData=new FormData($(\'.updateForm\')[0]);\r\n        var url= $(\'.updateForm\')[0].action;\r\n        var method= $(\'.updateForm\')[0].method;\r\n        $(\'.modalMsg\').html(\'\');\r\n        $(\'.updateSave\').attr(\'disabled\',\'disabled\');\r\n        $.ajax({\r\n            url: url,\r\n            type: method,\r\n            data: formData,\r\n            // or       data:{_token:\'{{ csrf_token() }}\',dep_id:department,product_id:\'{{ $product->id }}\'},\r\n\r\n            dataType:\'JSON\',\r\n            contentType: false,\r\n            cache: false,\r\n            processData: false,\r\n            beforeSend: function(){\r\n            \r\n            },\r\n            success: function(data) {\r\n                if(data.status==true){\r\n\r\n                }else{\r\n\r\n                }\r\n            },error: function(jqXHR, textStatus, errorThrown) {\r\n                         var error_li = \'\';\r\n            $.each(response.responseJSON.errors,function(index,value){\r\n               error_li +=\'<li>\'+value+\'</li>\';\r\n             });\r\n             $(\'.validate_message\').html(error_li);\r\n             $(\'.error_message\').removeClass(\'hidden\');\r\n           },\r\n        });\r\n    });', NULL, NULL, NULL, '2020-07-29 12:08:33', '2020-07-29 12:08:33'),
(43, 'create array or object of form data', 'var form_data = $(\'#product_form\').serialize();\r\nvar unindexed_array = $form.serializeArray();\r\nvar input = $(\"form.login\").serialize();\r\nvar formData = $(\"form.login\").serializeObject();', NULL, NULL, NULL, '2020-07-29 15:46:04', '2020-07-29 15:46:04');
INSERT INTO `codes` (`id`, `name`, `code`, `explaine`, `file`, `bigfile`, `created_at`, `updated_at`) VALUES
(44, 'select2 example', '@push(\'js\')\r\n<script type=\"text/javascript\">\r\n$(document).ready(function() {\r\n	var dataSelect = [\r\n				@foreach(App\\Model\\Country::all() as $country)\r\n				  {\r\n				  	\"text\":\"{{ $country->{\'country_name_\'.lang()} }}\",\r\n				  	\"children\":[\r\n				 	@foreach($country->malls()->get() as $mall)\r\n				 	{\r\n				 		\"id\":{{ $mall->id }},\r\n				 		\"text\":\"{{ $mall->{\'name_\'.lang()} }}\",\r\n				 		@if(check_mall($mall->id,$product->id))\r\n				 		\"selected\":true\r\n				 		@endif\r\n				 	},\r\n				 	@endforeach\r\n				 	],\r\n				 },\r\n				 @endforeach\r\n		];\r\n\r\n    $(\'.mall_select2\').select2({data:dataSelect});\r\n    // $(\'.mall_select2\').select2();\r\n\r\n});\r\n</script>\r\n\r\n@endpush\r\n<div id=\"product_size_weight\" class=\"tab-pane fade\">\r\n	<h3>{{ trans(\'admin.product_size_weight\') }}</h3>\r\n	<div class=\"size_weight\">\r\n		<center><h1>برجاء قم باختيار قسم</h1></center>\r\n	</div>\r\n	<div class=\"info_data hidden\">\r\n		<div class=\"form-group  col-md-4 col-lg-4 col-sm-4 col-xs-12\">\r\n			{!! Form::label(\'color_id\',trans(\'admin.color_id\')) !!}\r\n			{!! Form::select(\'color_id\',App\\Model\\Color::pluck(\'name_\'.lang(),\'id\'),$product->color_id,[\'class\'=>\'form-control\',\'placeholder\'=>trans(\'admin.color_id\')]) !!}\r\n		</div>\r\n		<div class=\"form-group col-md-4 col-lg-4 col-sm-4 col-xs-12\">\r\n			{!! Form::label(\'trade_id\',trans(\'admin.trade_id\')) !!}\r\n			{!! Form::select(\'trade_id\',App\\Model\\TradeMark::pluck(\'name_\'.lang(),\'id\'),$product->trade_id,[\'class\'=>\'form-control\',\'placeholder\'=>trans(\'admin.trade_id\')]) !!}\r\n		</div>\r\n		<div class=\"form-group col-md-4 col-lg-4 col-sm-4 col-xs-12\">\r\n			{!! Form::label(\'manu_id\',trans(\'admin.manu_id\')) !!}\r\n			{!! Form::select(\'manu_id\',App\\Model\\Manufacturers::pluck(\'name_\'.lang(),\'id\'),$product->manu_id,[\'class\'=>\'form-control\',\'placeholder\'=>trans(\'admin.manu_id\')]) !!}\r\n		</div>\r\n		<div class=\"col-md-12 col-lg-12 col-sm-12\">\r\n			{!! Form::label(\'malls\',trans(\'admin.malls\')) !!}\r\n      <select name=\"mall[]\" class=\"form-control mall_select2\" multiple=\"multiple\" style=\"width: 100%\">\r\n      </select>\r\n       <!-- @foreach(App\\Model\\Country::all() as $country)\r\n         <optgroup label=\"{{$country->{\'country_name_\' . lang()} }}\">\r\n				  	@foreach($country->malls()->get() as $mall)\r\n            <option value=\"{{$mall->id}}\">{{$mall->{\'name_\' . lang()} }}</option>\r\n				  	@endforeach\r\n          </optgroup>\r\n				 @endforeach -->\r\n		</div>\r\n		<div class=\"clearfix\"></div>\r\n	</div>\r\n</div>', 'function check_mall($id, $pid) {\r\n		return \\App\\Model\\MallProduct::where(\'product_id\', $pid)->where(\'mall_id\', $id)->count() > 0?true:false;\r\n	}\r\n\r\n// select2 valuse will be array of selected values \r\n//you can use it like that \r\n//array name is mall\r\n		if (request()->has(\'mall\')) {\r\n			MallProduct::where(\'product_id\', $id)->delete();\r\n			foreach (request(\'mall\') as $mall) {\r\n				MallProduct::create([\r\n					\'product_id\' => $id,\r\n					\'mall_id\'    => $mall,\r\n				]);\r\n			}\r\n		}', NULL, NULL, '2020-07-29 15:51:20', '2020-07-29 15:51:20'),
(45, 'fork', 'نسخه من كود زي ووردبريس مثلا باخدها واعمل لها تعديلات ويبقي عندي نسخه خاصه بي معدله', NULL, NULL, NULL, '2020-07-30 08:54:18', '2020-07-30 08:54:18'),
(46, 'plugin - addin - addon', 'مكون اضافي يضاف للبرنامج يمنحه مميزات اضافيه', NULL, NULL, NULL, '2020-07-30 08:57:24', '2020-07-30 08:57:24'),
(47, 'theme', 'package contain a grafical appearance بتغير الواان واشكال وخطوط المحتوي', NULL, NULL, NULL, '2020-07-30 09:05:20', '2020-07-30 09:05:20'),
(48, 'bootstrab themse links', 'https://bootsnipp.com/', NULL, NULL, NULL, '2020-08-06 12:00:57', '2020-08-06 12:00:57'),
(49, 'add pathes', '<link rel=\"stylesheet\" href=\"{{ asset(\'/dropzone/dropzone.min.css\') }}\">\r\n\r\n<script src=\"{{ url(\'/\') }}/dropzone/dropzone.min.js\"></script>\r\n\r\n<link href=\"{{url(\'css/style.css\')}}\" rel=\"stylesheet\">', NULL, NULL, NULL, '2020-08-06 12:25:13', '2020-08-06 12:28:50'),
(50, 'logout', 'Route::get(\'/logout\', function() {\r\n	if(\\Auth::check()) {\r\n		\\Auth::logout();\r\n		return redirect(\'/home\');\r\n	}else {\r\n		return redirect(\'/\');\r\n	}\r\n})->name(\'logout\');', NULL, NULL, NULL, '2020-08-06 15:10:46', '2020-08-06 15:10:46'),
(51, 'laravel collective', 'composer require \"laravelcollective/html\":\"^5.3.0\"\r\n\r\nNext, add your new provider to the providers array of config/app.php:\r\n\r\n  \'providers\' => [\r\n    // ...\r\n    Collective\\Html\\HtmlServiceProvider::class,\r\n    // ...\r\n  ],\r\n\r\n  \'aliases\' => [\r\n    // ...\r\n      \'Form\' => Collective\\Html\\FormFacade::class,\r\n      \'Html\' => Collective\\Html\\HtmlFacade::class,\r\n    // ...\r\n  ],', NULL, NULL, NULL, '2020-08-06 15:38:31', '2020-08-06 15:38:31'),
(52, 'bootsrab 4.5 files', 'bootsrab 4.5 files\r\n\r\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" integrity=\"sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z\" crossorigin=\"anonymous\">\r\n\r\n<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\" integrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\" integrity=\"sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV\" crossorigin=\"anonymous\"></script>', NULL, 'files/478124824bootstrap.min.css', 'bigfiles/870102597bootstrab 4.5 files.rar', '2020-08-07 15:09:21', '2020-08-07 15:13:25'),
(53, 'scheema', '<?php\r\n\r\nnamespace App\\Providers;\r\n\r\nuse Illuminate\\Support\\ServiceProvider;\r\nuse Illuminate\\Support\\Facades\\Schema;\r\nclass AppServiceProvider extends ServiceProvider\r\n{\r\n    /**\r\n     * Register any application services.\r\n     *\r\n     * @return void\r\n     */\r\n    public function register()\r\n    {\r\n        //\r\n    }\r\n\r\n    /**\r\n     * Bootstrap any application services.\r\n     *\r\n     * @return void\r\n     */\r\n    public function boot()\r\n    {\r\n      Schema::defaultStringLength(191);\r\n    }\r\n}', NULL, NULL, NULL, '2020-08-08 10:37:29', '2020-08-08 10:37:29'),
(54, 'npm install bootstrap 4', 'npm install bootstrap@4.0.0-alpha.6', NULL, NULL, NULL, '2020-08-08 17:18:49', '2020-08-08 17:18:49'),
(55, 'vue on click or event any key', '<input v-on:keyup.13=\"submit\">\r\n\r\n\r\n//on click key have asc 13\r\n\r\n<input v-on:keyup.page-down=\"onPageDown\">\r\n\r\n.enter\r\n.tab\r\n.delete (captures both “Delete” and “Backspace” keys)\r\n.esc\r\n.space\r\n.up\r\n.down\r\n.left\r\n.right', NULL, NULL, NULL, '2020-08-08 23:12:34', '2020-08-08 23:12:34'),
(56, 'vue chat scroll bottom package', 'npm install --save vue-chat-scroll\r\n\r\n//in app.js\r\nimport Vue from \'vue\'\r\n\r\nimport VueChatScroll from \'vue-chat-scroll\'\r\nVue.use(VueChatScroll)\r\n\r\n\r\n<ul class=\"messages\" v-chat-scroll>\r\n  <li class=\"message\" v-for=\"n in messages\">{{ n }}</li>\r\n</ul>\r\n\r\n\r\n<ul class=\"messages\" v-chat-scroll=\"{always: false, smooth: true}\">\r\n  <li class=\"message\" v-for=\"n in messages\">{{ n }}</li>\r\n</ul>\r\n\r\n\r\n<ul class=\"messages\" v-chat-scroll=\"{smooth: true, notSmoothOnInit: true}\">\r\n  <li class=\"message\" v-for=\"n in messages\">{{ n }}</li>\r\n</ul>\r\n\r\n<ul class=\"messages\" v-chat-scroll=\"{always: false, smooth: true, scrollonremoved:true}\">\r\n  <li class=\"message\" v-for=\"n in messages\">{{ n }}</li>\r\n  <li v-if=\"loading\">&bull;&bull;&bull;</li>\r\n</ul>\r\n\r\n<ul class=\"messages\" v-chat-scroll=\"{always: false, smooth: true, scrollonremoved:true, smoothonremoved: false}\">\r\n  <li class=\"message\" v-for=\"n in messages\">{{ n }}</li>\r\n  <li v-if=\"loading\">&bull;&bull;&bull;</li>\r\n</ul>\r\n\r\n<ul class=\"messages\" :v-chat-scroll=\"{enabled: enabled}\">\r\n  <li class=\"message\" v-for=\"n in messages\">{{ n }}</li>\r\n</ul>\r\ndata () => {\r\n  enabled: false,\r\n}\r\n\r\n<ul class=\"messages\" v-chat-scroll=\"{always: false}\" @v-chat-scroll-top-reached=\"customMethod\">\r\n  <li class=\"message\" v-for=\"n in messages\">{{ n }}</li>\r\n</ul>', NULL, NULL, NULL, '2020-08-09 01:08:07', '2020-08-09 01:08:07'),
(57, 'setup pusher chat', 'Broadcast Service Provider\r\nBefore broadcasting any events, you will first need to register the App\\Providers\\BroadcastServiceProvider. In fresh Laravel applications, you only need to uncomment this provider in the providers array of your config/app.php configuration file. This provider will allow you to register the broadcast authorization routes and callbacks.\r\n\r\nCSRF Token\r\nLaravel Echo will need access to the current session\'s CSRF token. You should verify that your application\'s head HTML element defines a meta tag containing the CSRF token:\r\n\r\n<meta name=\"csrf-token\" content=\"{{ csrf_token() }}\">\r\n\r\nDriver Prerequisites\r\nPusher Channels\r\nIf you are broadcasting your events over Pusher Channels, you should install the Pusher Channels PHP SDK using the Composer package manager:\r\n\r\ncomposer require pusher/pusher-php-server \"~4.0\"\r\nNext, you should configure your Channels credentials in the config/broadcasting.php configuration file. An example Channels configuration is already included in this file, allowing you to quickly specify your Channels key, secret, and application ID. The config/broadcasting.php file\'s pusher configuration also allows you to specify additional options that are supported by Channels, such as the cluster:\r\n\r\n\'options\' => [\r\n    \'cluster\' => \'eu\',\r\n    \'useTLS\' => true\r\n],\r\n\r\n\r\n// add to  EventServiceProvider in app/providers/EventServiceProvider .php\r\n\r\n    protected $listen = [\r\n        \'App\\Events\\ChatEvent\' => [\r\n          \'App\\Listeners\\ChatListener\',\r\n        ],\r\n    ]\r\n\r\nphp artisan event:generate\r\n\r\n//add oucher key and secret\r\n\r\nnpm install --save laravel-echo pusher-js\r\n\r\n//uncomment\r\nimport Echo from \'laravel-echo\'\r\nfrom resource/js/bootstrab.js', NULL, NULL, NULL, '2020-08-10 10:08:57', '2020-08-10 15:56:17'),
(58, 'create event and listener simple', '// add to  EventServiceProvider in app/providers/EventServiceProvider .php\r\n\r\n    protected $listen = [\r\n        \'App\\Events\\ChatEvent\' => [\r\n          \'App\\Listeners\\ChatListener\',\r\n        ],\r\n    ]\r\n\r\nphp artisan event:generate\r\n\r\n//in your controller\r\nuse App\\Event\\ChatEvent;\r\n\r\n//in your function\r\n      event(new ChatEvent($variabels));', NULL, NULL, NULL, '2020-08-10 10:16:06', '2020-08-10 15:58:38'),
(59, 'vue js crud example', '<template>\r\n  <div class=\"container\">\r\n    <h2 class=\"py-4\" id=\"top\">Articles</h2>\r\n    <div class=\"alert alert-success\" v-show=\"showMsg\">{{message}}</div>\r\n    <form action=\"\" @submit.prevent=\"addArticle\" class=\"mb-3\">\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"title\"\r\n          v-model=\"article.title\"\r\n          class=\"form-control\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"body\"\r\n          v-model=\"article.body\"\r\n          class=\"form-control\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button type=\"submit\" class=\"btn btn-light btn-lock\">Save</button>\r\n      </div>\r\n    </form>\r\n    <nav aria-label=\"Page navigation example\">\r\n      <ul class=\"pagination\">\r\n        <li\r\n          v-bind:class=\"[{ disabled: !pagination.prev_page_url }]\"\r\n          class=\"page-item\"\r\n        >\r\n          <a\r\n            @click=\"fetchArticles(pagination.prev_page_url)\"\r\n            class=\"page-link\"\r\n            href=\"#\"\r\n            >Previous</a\r\n          >\r\n        </li>\r\n\r\n        <li class=\"page-item disabled\">\r\n          <a class=\"page-link text-dark\">\r\n            Page {{ pagination.current_page }} Of {{ pagination.last_page }}\r\n          </a>\r\n        </li>\r\n\r\n        <li\r\n          v-bind:class=\"[{ disabled: !pagination.next_page_url }]\"\r\n          class=\"page-item\"\r\n        >\r\n          <a\r\n            id=\"next\"\r\n            @click=\"fetchArticles(pagination.next_page_url)\"\r\n            class=\"page-link\"\r\n            href=\"#\"\r\n            >Next</a\r\n          >\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    <div\r\n      class=\"card card-body mb-2\"\r\n      v-bind:id=\"\'article_\' + article.id\"\r\n      v-for=\"article in articles\"\r\n      v-bind:key=\"article.id\"\r\n    >\r\n      <h4>{{ article.title }}</h4>\r\n      <p>{{ article.body }}</p>\r\n      <hr />\r\n      <div class=\"row\">\r\n        <button\r\n          class=\"fa fa-trash btn btn-danger mx-3\"\r\n          @click=\"deleteArticle(article.id)\"\r\n        >\r\n          Delete\r\n        </button>\r\n        <a href=\"#top\">\r\n        <button\r\n          class=\"fa fa-trash btn btn-info mx-3\"\r\n          @click=\"editArticle(article)\"\r\n        >\r\n          Update\r\n        </button>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      articles: [],\r\n      article: {\r\n        id: \"\",\r\n        title: \"\",\r\n        body: \"\",\r\n        article_id: \"\",\r\n      },\r\n      showMsg:false,\r\n      message:\"\",\r\n      pagination: {},\r\n      edit: false\r\n    };\r\n  },\r\n\r\n  created() {\r\n    this.fetchArticles();\r\n  },\r\n\r\n  methods: {\r\n    fetchArticles(page_url) {\r\n      // let vm=this;\r\n      page_url = page_url || \"/articles\";\r\n      fetch(page_url) //\'/articles\'\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          this.articles = res.data;\r\n\r\n          let pagination = {\r\n            current_page: res.current_page,\r\n            last_page: res.last_page,\r\n            next_page_url: res.next_page_url,\r\n            prev_page_url: res.prev_page_url\r\n          };\r\n          this.pagination = pagination;\r\n          // vm.makePagination(res);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }, //\r\n    deleteArticle(id) {\r\n      if (confirm(\"Are you sure you want to delete this article?\")) {\r\n        axios\r\n          .delete(\"/article/\" + id)\r\n          .then(response => {\r\n            this.fetchArticles(\"/articles\");\r\n            this.showMsg=true,\r\n            this.message=\"Article deleted\",\r\n            setTimeout(() => {\r\n              this.showMsg=false;\r\n            }, 1500);\r\n            // alert(response.data.body);\r\n            // $(\"#article_\" + id).remove();\r\n          })\r\n          .catch(err => console.log(err));\r\n        // fetch(\'/article/\'+id)\r\n        // .then(res => res.json())\r\n        // .then(data => {\r\n        //   alert(\'Article removed\');\r\n        //   this.fetchArticles(\'/articles\');\r\n        // })\r\n        // .catch(err => console.log(err));\r\n      }\r\n    },\r\n    addArticle() {\r\n      if (this.edit === false) {\r\n        // add\r\n        axios\r\n          .post(\"/article\", this.article, {\r\n            body: JSON.stringify(this.article),\r\n            headers: {\r\n              \"content-type\": \"application/json\"\r\n            }\r\n          })\r\n          .then(response => {\r\n            this.article.title = \"\";\r\n            this.article.body = \"\";\r\n            this.fetchArticles(\"/articles\");\r\n            this.showMsg=true,\r\n            this.message=\"Article Added\",\r\n            setTimeout(() => {\r\n              this.showMsg=false;\r\n            }, 1500);\r\n            console.log(response);\r\n          })\r\n          .catch(err => console.log(err));\r\n      } else {\r\n        // edit\r\n        axios\r\n          .put(\"/article\", this.article, {\r\n            body: JSON.stringify(this.article),\r\n            headers: {\r\n              \"content-type\": \"application/json\"\r\n            }\r\n          })\r\n          .then(response => {\r\n            this.article.title = \"\";\r\n            this.article.body = \"\";\r\n            this.fetchArticles(\"/articles\");\r\n            this.showMsg=true,\r\n            this.message=\"Article updated\",\r\n            setTimeout(() => {\r\n              this.showMsg=false;\r\n            }, 1500);\r\n            // alert(\"Article updated\");\r\n            console.log(response);\r\n          })\r\n          .catch(err => console.log(err));\r\n      }\r\n    },\r\n    editArticle(article) {\r\n      this.edit = true;\r\n      this.article.id = article.id;\r\n      this.article.article_id = article.id;\r\n      this.article.title = article.title,\r\n      this.article.body = article.body;\r\n      addArticle();\r\n\r\n    }\r\n    // makePagination(res){\r\n    // let pagination={\r\n    //   current_page:res.current_page,\r\n    //   last_page:res.last_page,\r\n    //   next_page_url:res.next_page_url,\r\n    //   prev_page_url:res.prev_page_url,\r\n    // }\r\n    // this.pagination=pagination;\r\n    // },//\r\n  }\r\n};\r\n</script>\r\n\r\n<style></style>', NULL, NULL, NULL, '2020-08-10 20:27:04', '2020-08-10 20:27:04'),
(60, 'jwt athenticate simple', 'Install via composer\r\nRun the following command to pull in the latest version:\r\n\r\ncomposer require tymon/jwt-auth\r\nAdd service provider\r\nAdd the service provider to the providers array in the config/app.php config file as follows:\r\n\r\n\'providers\' => [\r\n\r\n    ...\r\n\r\n    Tymon\\JWTAuth\\Providers\\LaravelServiceProvider::class,\r\n]\r\n\r\nGenerate secret key\r\nI have included a helper command to generate a key for you:\r\n\r\nphp artisan jwt:secret', 'Update your User model\r\nFirstly you need to implement the Tymon\\JWTAuth\\Contracts\\JWTSubject contract on your User model, which requires that you implement the 2 methods getJWTIdentifier() and getJWTCustomClaims().\r\n\r\nThe example below should give you an idea of how this could look. Obviously you should make any changes necessary to suit your own needs.\r\n\r\n<?php\r\n\r\nnamespace App;\r\n\r\nuse Tymon\\JWTAuth\\Contracts\\JWTSubject;\r\nuse Illuminate\\Notifications\\Notifiable;\r\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\r\n\r\nclass User extends Authenticatable implements JWTSubject\r\n{\r\n    use Notifiable;\r\n\r\n    // Rest omitted for brevity\r\n\r\n    /**\r\n     * Get the identifier that will be stored in the subject claim of the JWT.\r\n     *\r\n     * @return mixed\r\n     */\r\n    public function getJWTIdentifier()\r\n    {\r\n        return $this->getKey();\r\n    }\r\n\r\n    /**\r\n     * Return a key value array, containing any custom claims to be added to the JWT.\r\n     *\r\n     * @return array\r\n     */\r\n    public function getJWTCustomClaims()\r\n    {\r\n        return [];\r\n    }\r\n}\r\nConfigure Auth guard\r\nNote: This will only work if you are using Laravel 5.2 and above.\r\n\r\nInside the config/auth.php file you will need to make a few changes to configure Laravel to use the jwt guard to power your application authentication.\r\n\r\nMake the following changes to the file:\r\n\r\n\'defaults\' => [\r\n    \'guard\' => \'api\',\r\n    \'passwords\' => \'users\',\r\n],\r\n\r\n...\r\n\r\n\'guards\' => [\r\n    \'api\' => [\r\n        \'driver\' => \'jwt\',\r\n        \'provider\' => \'users\',\r\n    ],\r\n],\r\nHere we are telling the api guard to use the jwt driver, and we are setting the api guard as the default.\r\n\r\nWe can now use Laravel\'s built in Auth system, with jwt-auth doing the work behind the scenes!\r\n\r\nAdd some basic authentication routes\r\nFirst let\'s add some routes in routes/api.php as follows:\r\n\r\nRoute::group([\r\n\r\n    \'middleware\' => \'api\',\r\n    \'namespace\' => \'App\\Http\\Controllers\',\r\n    \'prefix\' => \'auth\'\r\n\r\n], function ($router) {\r\n\r\n    Route::post(\'login\', \'AuthController@login\');\r\n    Route::post(\'logout\', \'AuthController@logout\');\r\n    Route::post(\'refresh\', \'AuthController@refresh\');\r\n    Route::post(\'me\', \'AuthController@me\');\r\n\r\n});\r\nCreate the AuthController\r\n<?php\r\n\r\nnamespace App\\Http\\Controllers;\r\n\r\nuse Illuminate\\Http\\Request;\r\n\r\nclass AuthController extends Controller\r\n{\r\n    /**\r\n     * Create a new AuthController instance.\r\n     *\r\n     * @return void\r\n     */\r\n    public function __construct()\r\n    {\r\n        $this->middleware(\'auth:api\', [\'except\' => [\'login\']]);\r\n    }\r\n\r\n    /**\r\n     * Get a JWT via given credentials.\r\n     *\r\n     * @return \\Illuminate\\Http\\JsonResponse\r\n     */\r\n    public function login()\r\n    {\r\n        $credentials = request([\'email\', \'password\']);\r\n\r\n        if (! $token = auth(\'api\')->attempt($credentials)) {\r\n            return response()->json([\'error\' => \'Unauthorized\'], 401);\r\n        }\r\n\r\n        return $this->respondWithToken($token);\r\n    }\r\n\r\n    /**\r\n     * Get the authenticated User.\r\n     *\r\n     * @return \\Illuminate\\Http\\JsonResponse\r\n     */\r\n    public function me()\r\n    {\r\n        return response()->json(auth(\'api\')->user());\r\n    }\r\n\r\n    /**\r\n     * Log the user out (Invalidate the token).\r\n     *\r\n     * @return \\Illuminate\\Http\\JsonResponse\r\n     */\r\n    public function logout()\r\n    {\r\n        auth(\'api\')->logout();\r\n\r\n        return response()->json([\'message\' => \'Successfully logged out\']);\r\n    }\r\n\r\n    /**\r\n     * Refresh a token.\r\n     *\r\n     * @return \\Illuminate\\Http\\JsonResponse\r\n     */\r\n    public function refresh()\r\n    {\r\n        return $this->respondWithToken(auth(\'api\')->refresh());\r\n    }\r\n\r\n    /**\r\n     * Get the token array structure.\r\n     *\r\n     * @param  string $token\r\n     *\r\n     * @return \\Illuminate\\Http\\JsonResponse\r\n     */\r\n    protected function respondWithToken($token)\r\n    {\r\n        return response()->json([\r\n            \'access_token\' => $token,\r\n            \'user\' => $this->guard()->user(),\r\n            \'token_type\' => \'bearer\',\r\n            \'expires_in\' => auth(\'api\')->factory()->getTTL() * 60\r\n        ]);\r\n    }\r\n\r\n    public function guard() {\r\n        return \\Auth::Guard(\'api\');\r\n    }\r\n}', NULL, NULL, '2020-08-13 20:34:55', '2020-08-13 20:34:55'),
(61, 'seeder simple', '<?php\r\n\r\nuse Illuminate\\Database\\Seeder;\r\nuse App\\Track;\r\nuse App\\Course;\r\nuse App\\Quiz;\r\nuse App\\User;\r\nclass DatabaseSeeder extends Seeder\r\n{\r\n    public function run()\r\n    {\r\n        $owner =User::create([\r\n            \'id\' => 1,\r\n            \'name\' => \'Eman Hamdy\',\r\n            \'email\' => \'eman@example.com\',\r\n            \'email_verified_at\' => now(),\r\n            \'password\' => \'$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi\', // password\r\n            \'remember_token\' => Str::random(10),\r\n            \'admin\' => 1,\r\n            \'score\' => 50,\r\n            ]);\r\n            \r\n        $users = factory(\'App\\User\', 10)->create();\r\n\r\n        // $users[]=$owner;\r\n\r\n\r\n    	$tracks = factory(\'App\\Track\', 10)->create();\r\n        foreach ($users as $user) {\r\n            $tracks_ids = [];\r\n            $tracks_ids[] = Track::all()->random()->id;\r\n            $tracks_ids[] = Track::all()->random()->id;\r\n\r\n            $user->tracks()->sync( $tracks_ids );\r\n        }\r\n\r\n\r\n        $courses = factory(\'App\\Course\', 50)->create();\r\n\r\n        foreach ($users as $user) {\r\n            $courses_ids = [];\r\n\r\n            $courses_ids[] = Course::all()->random()->id;\r\n            $courses_ids[] = Course::all()->random()->id;\r\n            $courses_ids[] = Course::all()->random()->id;\r\n\r\n            $user->courses()->sync( $courses_ids );\r\n        }\r\n\r\n\r\n        factory(\'App\\Video\', 50)->create();\r\n        \r\n    	$quizzes = factory(\'App\\Quiz\', 80)->create();\r\n\r\n        foreach ($users as $user) {\r\n            $quizzes_ids = [];\r\n\r\n            $quizzes_ids[] = Quiz::all()->random()->id;\r\n            $quizzes_ids[] = Quiz::all()->random()->id;\r\n            $quizzes_ids[] = Quiz::all()->random()->id;\r\n\r\n            $user->quizzes()->sync( $quizzes_ids );\r\n        }\r\n\r\n    	factory(\'App\\Question\', 200)->create();\r\n\r\n        factory(\'App\\Photo\', 150)->create();\r\n        \r\n	$duplicateRecords = DB::table(\'photoable\')\r\n	->select(\'photoable_id\',\'photoable_type\')\r\n	->get();\r\n	// $uniqueCollection = $duplicateRecords->unique();\r\n	// $uniqueCollection->all();\r\n    // print_r($uniqueCollection);\r\n	foreach ($duplicateRecords as $value) {\r\n			$count=DB::table(\'photoable\')->where(\'photoable_id\', $value->photoable_id)->where(\'photoable_type\', $value->photoable_type)->count();\r\n			if($count > 1){\r\n				$count=DB::table(\'photoable\')->where(\'photoable_id\', $value->photoable_id)->where(\'photoable_type\', $value->photoable_type)->limit(1)->delete();\r\n			}\r\n		}\r\n    }\r\n}', NULL, NULL, NULL, '2020-08-14 13:59:37', '2020-08-14 13:59:37'),
(62, 'git hub commands', 'git init //first time\r\ngit add .//README.md\r\ngit commit -m \"first commit\"\r\ngit remote add origin https://github.com/emanhamdy-a/phone-book.git\r\ngit remote add origin https://github.com/username/reponame.git\r\ngit push -u origin master\r\n\r\n##################################\r\nstop errors\r\n\r\ngit config core.autocrlf true\r\ngit config --global --unset http.proxy\r\ngit config --global http.sslBackend \"openssl\"\r\n##################################\r\nemanhamdy-a    github\r\n0e0m0a0n0@gmail.com\r\ndododododogithub\r\n\r\ngit config --global user.name \"emanhamdy-a\"\r\ngit config --global user.email \"0e0m0a0n0@gmail.com\"', NULL, NULL, NULL, '2020-08-15 11:57:34', '2020-08-15 11:57:34'),
(63, 'learn code at heroku', 'get key\r\nphp artisan key:generate --show\r\n##################################\r\nstop error\r\ngit config core.autocrlf true\r\nhttps://youtu.be/skGZ8laUQco\r\nhttps://www.youtube.com/embed/skGZ8laUQco\r\nheroku git:remote -a app2\r\nheroku apps:destroy app1\r\n##################################\r\ngit add .\r\ngit commit -m \"text\"\r\ngit push heroku master\r\n##################################\r\nheroku run php artisan migrate\r\nheroku run php artisan db:seed\r\n##################################\r\nlearncode3 database \r\nHost\r\nec2-3-216-129-140.compute-1.amazonaws.com\r\n\r\nDatabase\r\ndaqbokk2pglpv5\r\n\r\nUser\r\niybfhffwpryctc\r\n\r\nheroku pg:push mylocaldb DATABASE_URL --app learncode3\r\nheroku pg:pull DATABASE_URL mylocaldb --app learncode3\r\npg_dump --no-owner learncode > dump.sq\r\n####################################\r\n\r\nPort\r\n5432\r\n\r\nPassword\r\n4db39348a0bf86d06d32c0b8ed57697ec93152fa111d4ff9aed9e813e0d26d97\r\n\r\n****************************************\r\nusernm\r\nb416645785a4be\r\n********************\r\npassword\r\n7d5443f5\r\n-----------\r\nheroku_0e509502a601632\r\n$ mysql <dbname> -u <username> -p<password> < <file.sql>', NULL, NULL, NULL, '2020-08-15 11:59:44', '2020-08-15 11:59:44'),
(64, 'set up and use vue-router', 'npm\r\nnpm install vue-router\r\n\r\nWhen used with a module system, you must explicitly install the router via \r\n\r\nVue.use():\r\n\r\nimport Vue from \'vue\'\r\nimport VueRouter from \'vue-router\'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n  { path: \'/home\', component: Home },\r\n  { path: \'/about\', component: About }\r\n]\r\nconst router = new VueRouter({\r\n  routes \r\n})\r\n// const app = new Vue({\r\n//   el:\'#app,\r\n//   router\r\n// });\r\n\r\n//replace this with your links\r\n\r\n    <router-link to=\"/foo\">Go to Foo</router-link>\r\n    <router-link to=\"/bar\">Go to Bar</router-link>\r\n\r\n  <!-- route outlet -->\r\n  <!-- component matched by the route will render here -->\r\n  <router-view></router-view>', NULL, NULL, NULL, '2020-08-15 14:44:48', '2020-08-15 14:44:48'),
(65, 'axios post', 'axios.post(\'/user\', {\r\n    firstName: \'Fred\',\r\n    lastName: \'Flintstone\'\r\n  })\r\n  .then(function (response) {\r\n    console.log(response);\r\n  })\r\n  .catch(function (error) {\r\n    console.log(error);\r\n  });\r\n/////////////////////////\r\n// Send a POST request\r\naxios({\r\n  method: \'post\',\r\n  url: \'/user/12345\',\r\n  data: {\r\n    firstName: \'Fred\',\r\n    lastName: \'Flintstone\'\r\n  }\r\n});', NULL, NULL, NULL, '2020-08-15 21:23:26', '2020-08-15 21:23:26'),
(66, 'validate example', 'use Validator;\r\nuse Illuminate\\Http\\Request;\r\n\r\n    public function store(Request $request)\r\n    {\r\n        $rules = [\r\n            \'name\' => \'required|min:3|max:50\',\r\n            \'course_id\' => \'required|integer\',\r\n        ];\r\n        $validator = Validator::make($request->all(),$rules);\r\n        if($request->ajax()){\r\n            if($validator->fails()) {\r\n                return response()->json([\'status\' => false,\'msg\'=> $validator->errors()->getMessageBag()]);\r\n            }\r\n        }else{\r\n            $this->validate($request, $rules);\r\n        }\r\n\r\n        if( $quiz = Quiz::create($request->all())) {\r\n            if($request->ajax()){\r\n                $created=$this->newQuiz($quiz);\r\n                return response()->json([\'status\' => true,\'msg\'=> \'Quizz created successfully.\',\'created\'=>$created]);\r\n            }else{\r\n                return redirect(\'/admin/quizzes\')->withStatus(\'Quiz successfully created.\');\r\n            }\r\n        }else {\r\n            return redirect(\'/admin/quizzes/create\')->withStatus(\'Something wrong, Try again\');\r\n        }\r\n    }', NULL, NULL, NULL, '2020-08-15 22:35:20', '2020-08-15 22:35:20'),
(67, 'get object keys as array', 'return object keys as objec\r\nObject.keys(item);', NULL, NULL, NULL, '2020-08-16 21:05:07', '2020-08-16 22:14:27'),
(68, 'array filter', 'var numbers = [1, 3, 6, 8, 11];\r\n\r\nvar lucky = numbers.filter(function(number) {\r\n  return number > 7;\r\n});\r\n\r\n// [ 8, 11 ]', NULL, NULL, NULL, '2020-08-16 21:53:56', '2020-08-16 21:53:56'),
(69, 'filter array of object', 'var heroes = [\r\n	{name: “Batman”, franchise: “DC”},\r\n	{name: “Ironman”, franchise: “Marvel”},\r\n	{name: “Thor”, franchise: “Marvel”},\r\n	{name: “Superman”, franchise: “DC”}\r\n];\r\n\r\nvar marvelHeroes =  heroes.filter(function(hero) {\r\n	return hero.franchise == “Marvel”;\r\n});\r\n\r\n// [ {name: “Ironman”, franchise: “Marvel”}, {name: “Thor”, franchise: “Marvel”} ]', NULL, NULL, NULL, '2020-08-16 22:03:34', '2020-08-16 22:03:34'),
(70, 'get object values as array', 'Object.values(item);', NULL, NULL, NULL, '2020-08-16 22:15:39', '2020-08-16 22:15:39');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `codes`
--
ALTER TABLE `codes`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `codes`
--
ALTER TABLE `codes`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=71;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
